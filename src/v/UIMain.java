/*
 * This is the main user interface class for project Propagation.
 * Copyright Charles Gray.
 * All rights Reserved.
 */
package v;

import v.Log.Logfile;
import m.Common;
import m.ReadWSJTXFile;
import m.ReadEntityFile;
import m.Zipcodegeo;
import m.PopulateCallmaidMaidenhead;
import m.PopulateCallmaidCQITU;
import java.text.DecimalFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import m.db.ResultSetTableModel;
import java.util.ArrayList;
import m.OpenStreetMap;
import HTTP.PopulateCallmaidHamQTH;
import java.util.Locale;
import c.CallmaidUtils;
import UDP.UDPThreadManager;
import v.PlotParameters;
import c.UIMainC;
import v.File.ConfigureTextOutput;
import v.File.ExportCallsign;


/**
 *
 * @author chas
 */
public class UIMain extends javax.swing.JFrame 
{
private Logfile logger;
private ReadWSJTXFile rwf;
private ReadEntityFile rentf;
private DisplayTables dispTab;

//private SwingWorkerWSJTX swWSJTX;
private UDPThreadManager udptm;
private UIMainC mainC;



    /**
     * Creates new form UIMain
     */
public UIMain() 
  {
  this.logger = Common.logger;
  initComponents();
  this.mainC = new UIMainC(logger, this);
  if(Common.adminFlag==false)this.jMenuAdmin.setEnabled(false);
  long threeDays = 1000 * 24 * 60 * 60 * 3;
  long today = System.currentTimeMillis();
  this.jFormattedTextFieldStartDate.setValue(new Date(today - threeDays));
  this.jFormattedTextFieldEndDate.setValue(new Date());
  //this.jFormattedTextFieldModDate.setValue(new Date(today - threeDays));
  this.jMenuItemReadCallsignfromAlltxt.setText("Read " + Common.callsign + " from Alltxt.");
  this.setTitle("Propagation");
  this.setLocation(100,100);
  this.setVisible(true);
  this.dispTab = new DisplayTables(logger,Common.dbAllTxt);
  this.updateStatus();
  this.jComboBoxMessageType.addItem("All");
  for(int x=0; x < Common.messTypeString.length; x++)this.jComboBoxMessageType.addItem(Common.messTypeString[x]);
  String args[] = new String[1];
   // Populate combobox of country names
  this.jComboBoxCountry.removeAllItems();
  this.jComboBoxCountry.addItem("None");
   // Populate combobox of state names
  this.jComboBoxState.removeAllItems();
  this.jComboBoxState.addItem("None");
  Common.prodb.alstatenames.forEach((n) -> this.jComboBoxState.addItem((String)n)); 
  Common.prodb.alcountrynames.forEach((n) -> this.jComboBoxCountry.addItem((String)n));  
  } // end UIMain constructor






    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelStatus = new javax.swing.JPanel();
        jLabelTotalEntries = new javax.swing.JLabel();
        jTextFieldTotalEntries = new javax.swing.JTextField();
        jLabelDateFirstEntry = new javax.swing.JLabel();
        jTextFieldDateFirstEntry = new javax.swing.JTextField();
        jLabelDateLastEntry = new javax.swing.JLabel();
        jTextFieldDateLastEntry = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanelLogQuery = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabelStartDate = new javax.swing.JLabel();
        jFormattedTextFieldStartDate = new javax.swing.JFormattedTextField();
        jLabelEndDate = new javax.swing.JLabel();
        jFormattedTextFieldEndDate = new javax.swing.JFormattedTextField();
        jLabelMessType = new javax.swing.JLabel();
        jComboBoxMessageType = new javax.swing.JComboBox<>();
        jLabelMode = new javax.swing.JLabel();
        jComboBoxMode = new javax.swing.JComboBox<>();
        jLabelCallerCallsign = new javax.swing.JLabel();
        jTextFieldCallerCallsign = new javax.swing.JTextField();
        jComboBoxOrAnd = new javax.swing.JComboBox<>();
        jLabelRespondentCallsign = new javax.swing.JLabel();
        jTextFieldRespondentCallsign = new javax.swing.JTextField();
        jLabelSourceMaidenhead = new javax.swing.JLabel();
        jTextFieldSourceMaidenhead = new javax.swing.JTextField();
        jLabelDistance = new javax.swing.JLabel();
        jTextFieldDistance = new javax.swing.JTextField();
        jLabelPlusMinus = new javax.swing.JLabel();
        jTextFieldPlusMinus = new javax.swing.JTextField();
        jLabelBearing = new javax.swing.JLabel();
        jTextFieldBearing = new javax.swing.JTextField();
        jLabelPlusMiinusBearing = new javax.swing.JLabel();
        jTextFieldBearingPlusMinus = new javax.swing.JTextField();
        jButtonQueryCallLog = new javax.swing.JButton();
        jLabelMessage = new javax.swing.JLabel();
        jTextFieldMessage = new javax.swing.JTextField();
        jLabelContest = new javax.swing.JLabel();
        jTextFieldContest = new javax.swing.JTextField();
        jPanelCallsignQuery = new javax.swing.JPanel();
        jLabelCallsignQuery = new javax.swing.JLabel();
        jLabelCallsign = new javax.swing.JLabel();
        jTextFieldCallsign = new javax.swing.JTextField();
        jLabelMaidenhead = new javax.swing.JLabel();
        jTextFieldMaidenhead = new javax.swing.JTextField();
        jLabelState = new javax.swing.JLabel();
        jButtonQueryCallsign = new javax.swing.JButton();
        jLabelChooseOne = new javax.swing.JLabel();
        jLabelCountry = new javax.swing.JLabel();
        jComboBoxCountry = new javax.swing.JComboBox<>();
        jComboBoxState = new javax.swing.JComboBox<>();
        jButtonEditCallsign = new javax.swing.JButton();
        jLabelCQZone = new javax.swing.JLabel();
        jTextFieldCQZone = new javax.swing.JTextField();
        jLabelITUZone = new javax.swing.JLabel();
        jTextFieldITUZone = new javax.swing.JTextField();
        jLabelModDate = new javax.swing.JLabel();
        jComboBoxModDate = new javax.swing.JComboBox<>();
        jFormattedTextFieldModDate = new javax.swing.JFormattedTextField();
        jCheckBoxWorked = new javax.swing.JCheckBox();
        jLabelTotalCallmaidRecords = new javax.swing.JLabel();
        jTextFieldTotalCallmaidRecords = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuFile = new javax.swing.JMenu();
        jMenuItemReadAlltxt = new javax.swing.JMenuItem();
        jMenuItemReadCallsignfromAlltxt = new javax.swing.JMenuItem();
        jMenuItemExit = new javax.swing.JMenuItem();
        jMenuEdit = new javax.swing.JMenu();
        jMenuItemSetProperties = new javax.swing.JMenuItem();
        jMenuItemSelectQueryLogColumns = new javax.swing.JMenuItem();
        jMenuItemEditIdentifiers = new javax.swing.JMenuItem();
        jMenuAdmin = new javax.swing.JMenu();
        jMenuItemReadEntityFile = new javax.swing.JMenuItem();
        jMenuItemZipcode = new javax.swing.JMenuItem();
        jMenuItemPopCallmaid = new javax.swing.JMenuItem();
        jMenuItemEditCountryabbr = new javax.swing.JMenuItem();
        jMenuItemEditCountrygeo = new javax.swing.JMenuItem();
        jMenuItemEditCallsignprefix = new javax.swing.JMenuItem();
        jMenuExport = new javax.swing.JMenu();
        jMenuItemConfigureTextOutput = new javax.swing.JMenuItem();
        jMenuItemExportCallsigns = new javax.swing.JMenuItem();
        jMenuItemExportLog = new javax.swing.JMenuItem();
        jMenuItemExportPrefixes = new javax.swing.JMenuItem();
        jMenuItemExportCountryGeo = new javax.swing.JMenuItem();
        jMenuItemCountryAbbreviations = new javax.swing.JMenuItem();
        jMenuItemImportCallsigns = new javax.swing.JMenuItem();
        jMenuNetwork = new javax.swing.JMenu();
        jMenuItemWSJTXUDPServerStart = new javax.swing.JMenuItem();
        jMenuItemUDPServerStartCallsign = new javax.swing.JMenuItem();
        jMenuItemWSJTXUDPServerStop = new javax.swing.JMenuItem();
        jMenuItemOpenStreetMap = new javax.swing.JMenuItem();
        jMenuItemTestHTTPGet = new javax.swing.JMenuItem();
        jMenuPropagation = new javax.swing.JMenu();
        jMenuItemPlotParameters = new javax.swing.JMenuItem();
        jMenuAbout = new javax.swing.JMenu();
        jMenuItemAbout = new javax.swing.JMenuItem();
        jMenuItemHelp = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("MainFrame"); // NOI18N

        jPanelStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanelStatus.setName("Status"); // NOI18N

        jLabelTotalEntries.setText("Total entries in call log");

        jLabelDateFirstEntry.setText("Date First Entry");

        jTextFieldDateFirstEntry.setText("jTextField1");
        jTextFieldDateFirstEntry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDateFirstEntryActionPerformed(evt);
            }
        });

        jLabelDateLastEntry.setText("Date Last Entry");

        jTextFieldDateLastEntry.setText("jTextField1");

        jLabel1.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Log Status");

        javax.swing.GroupLayout jPanelStatusLayout = new javax.swing.GroupLayout(jPanelStatus);
        jPanelStatus.setLayout(jPanelStatusLayout);
        jPanelStatusLayout.setHorizontalGroup(
            jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStatusLayout.createSequentialGroup()
                .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelStatusLayout.createSequentialGroup()
                        .addComponent(jLabelDateFirstEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDateFirstEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelStatusLayout.createSequentialGroup()
                        .addComponent(jLabelTotalEntries)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextFieldTotalEntries, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelStatusLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLabelDateLastEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDateLastEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelStatusLayout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanelStatusLayout.setVerticalGroup(
            jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelStatusLayout.createSequentialGroup()
                .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldTotalEntries, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotalEntries))
                .addGap(13, 13, 13)
                .addGroup(jPanelStatusLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDateFirstEntry)
                    .addComponent(jTextFieldDateFirstEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelDateLastEntry)
                    .addComponent(jTextFieldDateLastEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanelLogQuery.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("Log Query");

        jLabelStartDate.setText("Start Date");

        jFormattedTextFieldStartDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        jFormattedTextFieldStartDate.setToolTipText("MM/DD/YY");

        jLabelEndDate.setText("End Date");

        jFormattedTextFieldEndDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        jFormattedTextFieldEndDate.setToolTipText("MM/DD/YY");

        jLabelMessType.setText("Message Type");

        jComboBoxMessageType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxMessageTypeActionPerformed(evt);
            }
        });

        jLabelMode.setText("Mode");

        jComboBoxMode.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "FT8", "FT4" }));

        jLabelCallerCallsign.setText("Caller Callsign");

        jComboBoxOrAnd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Or", "And" }));

        jLabelRespondentCallsign.setText("Respondent Callsign");

        jLabelSourceMaidenhead.setText("Source Maidenhead");

        jLabelDistance.setText("Distance");

        jLabelPlusMinus.setText("+-");

        jTextFieldPlusMinus.setText("100");

        jLabelBearing.setText("Bearing");

        jLabelPlusMiinusBearing.setText("+-");

        jTextFieldBearingPlusMinus.setText("22");

        jButtonQueryCallLog.setText("Query Call Log");
        jButtonQueryCallLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQueryCallLogActionPerformed(evt);
            }
        });

        jLabelMessage.setText("Message");

        jLabelContest.setText("Contest");

        javax.swing.GroupLayout jPanelLogQueryLayout = new javax.swing.GroupLayout(jPanelLogQuery);
        jPanelLogQuery.setLayout(jPanelLogQueryLayout);
        jPanelLogQueryLayout.setHorizontalGroup(
            jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLogQueryLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLogQueryLayout.createSequentialGroup()
                        .addComponent(jLabelMessType, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxMessageType, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(53, 53, 53)
                        .addComponent(jLabelMode, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxMode, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLogQueryLayout.createSequentialGroup()
                        .addComponent(jLabelCallerCallsign, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCallerCallsign, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxOrAnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(jLabelRespondentCallsign, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldRespondentCallsign, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelLogQueryLayout.createSequentialGroup()
                        .addComponent(jLabelStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jFormattedTextFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(43, 43, 43)
                        .addComponent(jLabelEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jFormattedTextFieldEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelLogQueryLayout.createSequentialGroup()
                        .addGroup(jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanelLogQueryLayout.createSequentialGroup()
                                .addComponent(jLabelDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldDistance, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelPlusMinus))
                            .addComponent(jLabelSourceMaidenhead, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelLogQueryLayout.createSequentialGroup()
                                .addComponent(jTextFieldSourceMaidenhead, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabelMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldMessage, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLabelContest, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldContest, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelLogQueryLayout.createSequentialGroup()
                                .addComponent(jTextFieldPlusMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(jLabelBearing, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldBearing, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelPlusMiinusBearing, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldBearingPlusMinus, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonQueryCallLog, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanelLogQueryLayout.setVerticalGroup(
            jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLogQueryLayout.createSequentialGroup()
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelStartDate)
                    .addComponent(jFormattedTextFieldStartDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelEndDate)
                    .addComponent(jFormattedTextFieldEndDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelMessType)
                    .addComponent(jComboBoxMessageType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMode)
                    .addComponent(jComboBoxMode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCallerCallsign)
                    .addComponent(jTextFieldCallerCallsign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxOrAnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelRespondentCallsign)
                    .addComponent(jTextFieldRespondentCallsign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelSourceMaidenhead)
                    .addComponent(jTextFieldSourceMaidenhead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMessage)
                    .addComponent(jTextFieldMessage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelContest)
                    .addComponent(jTextFieldContest, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelLogQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDistance)
                    .addComponent(jTextFieldDistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPlusMinus)
                    .addComponent(jTextFieldPlusMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelBearing)
                    .addComponent(jTextFieldBearing, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelPlusMiinusBearing)
                    .addComponent(jTextFieldBearingPlusMinus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonQueryCallLog))
                .addGap(0, 16, Short.MAX_VALUE))
        );

        jPanelCallsignQuery.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabelCallsignQuery.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        jLabelCallsignQuery.setForeground(new java.awt.Color(255, 0, 0));
        jLabelCallsignQuery.setText("Callsign Query");

        jLabelCallsign.setText("Callsign");

        jLabelMaidenhead.setText("Maidenhead");

        jTextFieldMaidenhead.setToolTipText("Maidenhead prefix");

        jLabelState.setText("State");

        jButtonQueryCallsign.setText("Query Callsign");
        jButtonQueryCallsign.setIconTextGap(1);
        jButtonQueryCallsign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonQueryCallsignActionPerformed(evt);
            }
        });

        jLabelChooseOne.setText("Choose one of below");

        jLabelCountry.setText("Country");

        jComboBoxCountry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));
        jComboBoxCountry.setMinimumSize(new java.awt.Dimension(580, 20));
        jComboBoxCountry.setPreferredSize(new java.awt.Dimension(680, 20));

        jComboBoxState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None" }));

        jButtonEditCallsign.setText("Edit Callsign");
        jButtonEditCallsign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditCallsignActionPerformed(evt);
            }
        });

        jLabelCQZone.setText("CQ Zone");

        jLabelITUZone.setText("ITU Zone");

        jLabelModDate.setText("Mod. Date");

        jComboBoxModDate.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "<=", ">=" }));
        jComboBoxModDate.setSelectedItem(">=");

        jFormattedTextFieldModDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        jFormattedTextFieldModDate.setToolTipText("MM/DD/YY");

        jCheckBoxWorked.setText("Worked");

        jLabelTotalCallmaidRecords.setText("Total callsign records");

        jTextFieldTotalCallmaidRecords.setText("0");

        javax.swing.GroupLayout jPanelCallsignQueryLayout = new javax.swing.GroupLayout(jPanelCallsignQuery);
        jPanelCallsignQuery.setLayout(jPanelCallsignQueryLayout);
        jPanelCallsignQueryLayout.setHorizontalGroup(
            jPanelCallsignQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCallsignQueryLayout.createSequentialGroup()
                .addGroup(jPanelCallsignQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelCallsignQueryLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanelCallsignQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelCallsignQueryLayout.createSequentialGroup()
                                .addComponent(jLabelCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(jComboBoxCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonQueryCallsign)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButtonEditCallsign, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE))
                            .addGroup(jPanelCallsignQueryLayout.createSequentialGroup()
                                .addComponent(jLabelCQZone, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldCQZone, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabelITUZone, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldITUZone, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jLabelModDate, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBoxModDate, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jFormattedTextFieldModDate, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jCheckBoxWorked, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanelCallsignQueryLayout.createSequentialGroup()
                                .addComponent(jLabelChooseOne, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(89, 89, 89)
                                .addComponent(jLabelCallsignQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabelTotalCallmaidRecords, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextFieldTotalCallmaidRecords))))
                    .addGroup(jPanelCallsignQueryLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabelCallsign, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldCallsign, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabelMaidenhead, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldMaidenhead, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(22, 22, 22)
                        .addComponent(jLabelState, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxState, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelCallsignQueryLayout.setVerticalGroup(
            jPanelCallsignQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCallsignQueryLayout.createSequentialGroup()
                .addGroup(jPanelCallsignQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelChooseOne)
                    .addComponent(jLabelCallsignQuery, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTotalCallmaidRecords)
                    .addComponent(jTextFieldTotalCallmaidRecords, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanelCallsignQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCallsign)
                    .addComponent(jTextFieldCallsign, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelMaidenhead)
                    .addComponent(jTextFieldMaidenhead, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelState)
                    .addComponent(jComboBoxState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addGroup(jPanelCallsignQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCountry)
                    .addComponent(jComboBoxCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonQueryCallsign)
                    .addComponent(jButtonEditCallsign))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelCallsignQueryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelCQZone)
                    .addComponent(jTextFieldCQZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelITUZone)
                    .addComponent(jTextFieldITUZone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelModDate)
                    .addComponent(jComboBoxModDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jFormattedTextFieldModDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCheckBoxWorked))
                .addGap(0, 7, Short.MAX_VALUE))
        );

        jMenuFile.setText("File");

        jMenuItemReadAlltxt.setText("Read All.txt");
        jMenuItemReadAlltxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReadAlltxtActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemReadAlltxt);

        jMenuItemReadCallsignfromAlltxt.setText("Read my callsign from All.txt");
        jMenuItemReadCallsignfromAlltxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReadCallsignfromAlltxtActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemReadCallsignfromAlltxt);

        jMenuItemExit.setText("Exit");
        jMenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExitActionPerformed(evt);
            }
        });
        jMenuFile.add(jMenuItemExit);

        jMenuBar1.add(jMenuFile);

        jMenuEdit.setText("Edit");

        jMenuItemSetProperties.setText("Set Properties");
        jMenuItemSetProperties.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSetPropertiesActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemSetProperties);

        jMenuItemSelectQueryLogColumns.setText("Select Query Log Columns");
        jMenuItemSelectQueryLogColumns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSelectQueryLogColumnsActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemSelectQueryLogColumns);

        jMenuItemEditIdentifiers.setText("Edit CQ/Contest Identifiers");
        jMenuItemEditIdentifiers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditIdentifiersActionPerformed(evt);
            }
        });
        jMenuEdit.add(jMenuItemEditIdentifiers);

        jMenuBar1.add(jMenuEdit);

        jMenuAdmin.setText("Admin");
        jMenuAdmin.setToolTipText("Read EN.dat and populate table callmaid.  Follow with Populate Callmaid menu item.");

        jMenuItemReadEntityFile.setText("Read Entity File");
        jMenuItemReadEntityFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemReadEntityFileActionPerformed(evt);
            }
        });
        jMenuAdmin.add(jMenuItemReadEntityFile);

        jMenuItemZipcode.setText("Read Zipcode File");
        jMenuItemZipcode.setToolTipText("Reads from free-zipcode-database.csv and populated table zipcodegeo");
        jMenuItemZipcode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemZipcodeActionPerformed(evt);
            }
        });
        jMenuAdmin.add(jMenuItemZipcode);

        jMenuItemPopCallmaid.setText("Populate Callmaid US");
        jMenuItemPopCallmaid.setToolTipText("Populate maidenhead from zipcode, CQ and ITU from state.");
        jMenuItemPopCallmaid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPopCallmaidActionPerformed(evt);
            }
        });
        jMenuAdmin.add(jMenuItemPopCallmaid);

        jMenuItemEditCountryabbr.setText("Edit countryabbr");
        jMenuItemEditCountryabbr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditCountryabbrActionPerformed(evt);
            }
        });
        jMenuAdmin.add(jMenuItemEditCountryabbr);

        jMenuItemEditCountrygeo.setText("Edit countrygeo");
        jMenuItemEditCountrygeo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditCountrygeoActionPerformed(evt);
            }
        });
        jMenuAdmin.add(jMenuItemEditCountrygeo);

        jMenuItemEditCallsignprefix.setText("Edit callsignprefix");
        jMenuItemEditCallsignprefix.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditCallsignprefixActionPerformed(evt);
            }
        });
        jMenuAdmin.add(jMenuItemEditCallsignprefix);

        jMenuBar1.add(jMenuAdmin);

        jMenuExport.setText("Import/Export Tables");

        jMenuItemConfigureTextOutput.setText("Configure Text Output");
        jMenuItemConfigureTextOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemConfigureTextOutputActionPerformed(evt);
            }
        });
        jMenuExport.add(jMenuItemConfigureTextOutput);

        jMenuItemExportCallsigns.setText("Export Callsigns");
        jMenuItemExportCallsigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportCallsignsActionPerformed(evt);
            }
        });
        jMenuExport.add(jMenuItemExportCallsigns);

        jMenuItemExportLog.setText("Export Log");
        jMenuItemExportLog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportLogActionPerformed(evt);
            }
        });
        jMenuExport.add(jMenuItemExportLog);

        jMenuItemExportPrefixes.setText("Export Prefixes");
        jMenuItemExportPrefixes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportPrefixesActionPerformed(evt);
            }
        });
        jMenuExport.add(jMenuItemExportPrefixes);

        jMenuItemExportCountryGeo.setText("Export Country Geo");
        jMenuItemExportCountryGeo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemExportCountryGeoActionPerformed(evt);
            }
        });
        jMenuExport.add(jMenuItemExportCountryGeo);

        jMenuItemCountryAbbreviations.setText("Export Country Abbreviations");
        jMenuItemCountryAbbreviations.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemCountryAbbreviationsActionPerformed(evt);
            }
        });
        jMenuExport.add(jMenuItemCountryAbbreviations);

        jMenuItemImportCallsigns.setText("Import Callsigns");
        jMenuItemImportCallsigns.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemImportCallsignsActionPerformed(evt);
            }
        });
        jMenuExport.add(jMenuItemImportCallsigns);

        jMenuBar1.add(jMenuExport);

        jMenuNetwork.setText("Network");

        jMenuItemWSJTXUDPServerStart.setText("WSJTX UDP Server Start");
        jMenuItemWSJTXUDPServerStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemWSJTXUDPServerStartActionPerformed(evt);
            }
        });
        jMenuNetwork.add(jMenuItemWSJTXUDPServerStart);

        jMenuItemUDPServerStartCallsign.setText("WSJTX UDP Server Start filter my callsign");
        jMenuItemUDPServerStartCallsign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemUDPServerStartCallsignActionPerformed(evt);
            }
        });
        jMenuNetwork.add(jMenuItemUDPServerStartCallsign);

        jMenuItemWSJTXUDPServerStop.setText("WSJTX UDP Server Stop");
        jMenuItemWSJTXUDPServerStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemWSJTXUDPServerStopActionPerformed(evt);
            }
        });
        jMenuNetwork.add(jMenuItemWSJTXUDPServerStop);

        jMenuItemOpenStreetMap.setText("Test OpenStreetMap");
        jMenuItemOpenStreetMap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemOpenStreetMapActionPerformed(evt);
            }
        });
        jMenuNetwork.add(jMenuItemOpenStreetMap);

        jMenuItemTestHTTPGet.setText("HamQTH Test");
        jMenuItemTestHTTPGet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemTestHTTPGetActionPerformed(evt);
            }
        });
        jMenuNetwork.add(jMenuItemTestHTTPGet);

        jMenuBar1.add(jMenuNetwork);

        jMenuPropagation.setText("Propagation");

        jMenuItemPlotParameters.setText("Plot Parameters");
        jMenuItemPlotParameters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPlotParametersActionPerformed(evt);
            }
        });
        jMenuPropagation.add(jMenuItemPlotParameters);

        jMenuBar1.add(jMenuPropagation);

        jMenuAbout.setText("About");

        jMenuItemAbout.setText("About this program");
        jMenuItemAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemAboutActionPerformed(evt);
            }
        });
        jMenuAbout.add(jMenuItemAbout);

        jMenuItemHelp.setText("Help");
        jMenuItemHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemHelpActionPerformed(evt);
            }
        });
        jMenuAbout.add(jMenuItemHelp);

        jMenuBar1.add(jMenuAbout);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelLogQuery, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanelCallsignQuery, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelLogQuery, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelCallsignQuery, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemReadAlltxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReadAlltxtActionPerformed

  if(rwf==null)rwf = new ReadWSJTXFile(Common.wsjtxFile);  
  if(rwf.status==false) // didn't find file specified by properties.txt name= "wsjtxFile".
    {
    System.err.println("rwf.status==false");
    logger.te("Construction of ReadWSJTXFile resulted in failed status.");
    return;
    }
  rwf.parseFile(null);
  this.updateStatus();
    }//GEN-LAST:event_jMenuItemReadAlltxtActionPerformed

    private void jMenuItemReadCallsignfromAlltxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReadCallsignfromAlltxtActionPerformed
      if(rwf==null)rwf = new ReadWSJTXFile(Common.wsjtxFile);  
  if(rwf.status==false) // didn't find file specified by properties.txt name= "wsjtxFile".
    {
    System.err.println("rwf.status==false");
    logger.te("Construction of ReadWSJTXFile resulted in failed status.");
    return;
    }
  rwf.parseFile(Common.callsign);
    }//GEN-LAST:event_jMenuItemReadCallsignfromAlltxtActionPerformed
    private void jMenuItemReadEntityFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemReadEntityFileActionPerformed
  if(rentf==null)rentf = new ReadEntityFile(Common.entityFile);  
  if(rentf.status==false) // didn't find file specified by properties.txt name= "entityFile".
    {
    System.err.println("rentf.status==false");
    logger.te("Construction of ReadEntityFile resulted in failed status.");
    return;
    }
  rentf.parseFile();
        
    }//GEN-LAST:event_jMenuItemReadEntityFileActionPerformed

    private void jMenuItemZipcodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemZipcodeActionPerformed
    Zipcodegeo zg = new Zipcodegeo(Common.zipcodeFile);
  if(zg.status==false) // didn't find file specified by properties.txt name= "entityFile".
    {
    System.err.println("zg.status==false");
    logger.te("Construction of Zipcodegeo resulted in failed status.");
    return;
    }
  zg.parseFile();    
    }//GEN-LAST:event_jMenuItemZipcodeActionPerformed

    private void jMenuItemPopCallmaidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPopCallmaidActionPerformed
    PopulateCallmaidMaidenhead pc = new PopulateCallmaidMaidenhead();//populate callmaid.maidenhead given callmaid.zipcode 
    System.out.println("popCallmaid() method returned " + pc.popCallmaid()); // Populate CQ and ITU for USA from state
    PopulateCallmaidCQITU pcqitu = new PopulateCallmaidCQITU();
    System.out.println("PopulateCallmaidCQITU.popCallmaid method returned " + pcqitu.popCallmaid());
    }//GEN-LAST:event_jMenuItemPopCallmaidActionPerformed

    private void jMenuItemSetPropertiesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSetPropertiesActionPerformed
       new SetProperties();
    }//GEN-LAST:event_jMenuItemSetPropertiesActionPerformed

    private void jButtonQueryCallLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQueryCallLogActionPerformed
     //dispTab.displayTable(this.buildSQLClauseAlltxt(),columnHeaders, columnSelection, columnTypes);    
     // table name, whereclause, 
     String[] columnHeaders = {"Date/Time","Type","R-Freq","Rx/Tx","Mode","RSSI","Offset","Audio","Message","Caller Sign","Caller Maid","Resp. Call","Resp. Maid","Caller RSS","Source Maid","Source Lat", "Source Lon","Dist. Between","Init. Bearing","Resp. RSS","Contest"};
     int[] columnSelection = Common.columnSelections;
     int[] columnTypes = {1,3,6,1,1};
     columnTypes=null; // automatic type assignment is working.
     String sqlClause = mainC.buildSQLClauseAlltxt(this.jFormattedTextFieldEndDate.getText(),
             this.jFormattedTextFieldStartDate.getText(),
             this.jComboBoxMode.getSelectedItem().toString(),
             this.jComboBoxMessageType.getSelectedIndex(),
             this.jTextFieldCallerCallsign.getText(),
             this.jTextFieldRespondentCallsign.getText(),
             (String)this.jComboBoxOrAnd.getSelectedItem(),
             this.jTextFieldSourceMaidenhead.getText(),
             this.jTextFieldContest.getText(),
             this.jTextFieldDistance.getText(),
             this.jTextFieldPlusMinus.getText(),
             this.jTextFieldBearing.getText(),
             this.jTextFieldBearingPlusMinus.getText(),
             this.jTextFieldMessage.getText());
     dispTab.displayTable(sqlClause, columnHeaders, columnSelection, columnTypes);
    }//GEN-LAST:event_jButtonQueryCallLogActionPerformed


  
    
    private void jMenuItemSelectQueryLogColumnsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSelectQueryLogColumnsActionPerformed
       new QueryColumnSelection();
    }//GEN-LAST:event_jMenuItemSelectQueryLogColumnsActionPerformed

    private void jTextFieldDateFirstEntryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDateFirstEntryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDateFirstEntryActionPerformed

    private void jComboBoxMessageTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxMessageTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBoxMessageTypeActionPerformed

    private void jMenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExitActionPerformed
       try{this.finalize();}
       catch(Throwable t){System.err.println("Finalize threw " + t.getMessage());}
    }//GEN-LAST:event_jMenuItemExitActionPerformed

    private void jButtonQueryCallsignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonQueryCallsignActionPerformed
     CallmaidUtils cmu = new CallmaidUtils(logger,Common.prodb,Common.debugFlag);
     String SQLClause = mainC.buildSQLClauseCallmaid(
             this.jTextFieldCallsign.getText(), this.jTextFieldMaidenhead.getText(),
             this.jTextFieldCQZone.getText(), this.jTextFieldITUZone.getText(),
             this.jFormattedTextFieldModDate.getText(), this.jComboBoxCountry.getSelectedIndex(),
             this.jComboBoxState.getSelectedIndex(), this.jComboBoxModDate.getSelectedIndex(),
             this.jCheckBoxWorked.isSelected());  
     if(SQLClause.equals(""))return;
     cmu.displayCallmaid(SQLClause);
    }//GEN-LAST:event_jButtonQueryCallsignActionPerformed

    private void jMenuItemEditIdentifiersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditIdentifiersActionPerformed
        new TableEditGeneric(Common.dbAllTxt,this.logger,"Select * from CONTESTIDENTIFIER");
    }//GEN-LAST:event_jMenuItemEditIdentifiersActionPerformed

    private void jMenuItemEditCountryabbrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditCountryabbrActionPerformed
        new TableEditGeneric(Common.dbAllTxt,this.logger,"Select * from COUNTRYABBR");
    }//GEN-LAST:event_jMenuItemEditCountryabbrActionPerformed

    private void jMenuItemEditCountrygeoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditCountrygeoActionPerformed
        new TableEditGeneric(Common.dbAllTxt,this.logger,"Select * from COUNTRYGEO order by ABBR");
    }//GEN-LAST:event_jMenuItemEditCountrygeoActionPerformed

    private void jMenuItemEditCallsignprefixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditCallsignprefixActionPerformed
        new TableEditGeneric(Common.dbAllTxt,this.logger,"Select * from CALLSIGNPREFIXES order by PREFIX");
    }//GEN-LAST:event_jMenuItemEditCallsignprefixActionPerformed

    private void jMenuItemExportLogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportLogActionPerformed
       Common.prodb.exportTableToCSV("ALLTXT", "LOG");
    }//GEN-LAST:event_jMenuItemExportLogActionPerformed

    private void jMenuItemExportPrefixesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportPrefixesActionPerformed
       Common.prodb.exportTableToCSV("CALLSIGNPREFIXES", "PREFIXES");
    }//GEN-LAST:event_jMenuItemExportPrefixesActionPerformed

    private void jMenuItemCountryAbbreviationsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemCountryAbbreviationsActionPerformed
      Common.prodb.exportTableToCSV("COUNTRYABBR", "COUNTRYABBREVIATIONS");
    }//GEN-LAST:event_jMenuItemCountryAbbreviationsActionPerformed

    private void jMenuItemExportCountryGeoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportCountryGeoActionPerformed
       Common.prodb.exportTableToCSV("COUNTRYGEO", "COUNTRYGEO");
    }//GEN-LAST:event_jMenuItemExportCountryGeoActionPerformed

    private void jButtonEditCallsignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditCallsignActionPerformed
       
     String SQLClause = mainC.buildSQLClauseCallmaid(
             this.jTextFieldCallsign.getText(), this.jTextFieldMaidenhead.getText(),
             this.jTextFieldCQZone.getText(), this.jTextFieldITUZone.getText(),
             this.jFormattedTextFieldModDate.getText(), this.jComboBoxCountry.getSelectedIndex(),
             this.jComboBoxState.getSelectedIndex(), this.jComboBoxModDate.getSelectedIndex(),
             this.jCheckBoxWorked.isSelected());  
     if(SQLClause.equals(""))return;
     new TableEditCallmaid(this.logger,"Ham Licensee Edit",Common.dbAllTxt,SQLClause);
    }//GEN-LAST:event_jButtonEditCallsignActionPerformed

    private void jMenuItemOpenStreetMapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemOpenStreetMapActionPerformed
        new OpenStreetMap(this.logger);
      
    }//GEN-LAST:event_jMenuItemOpenStreetMapActionPerformed

    private void jMenuItemTestHTTPGetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemTestHTTPGetActionPerformed
        // HTTPGet hg = new HTTPGet(this.logger);
        //hg.test();
        PopulateCallmaidHamQTH pchq = new PopulateCallmaidHamQTH(logger,Common.debugFlag);
        if(pchq.validStatus==false) {Common.qthrealtime=false; return;}
        Common.qthrealtime=true;
        System.out.println("Session ID=" + pchq.hqth.getSessionIDHamQTH());
        // in the case of U.S. license records which came largely from the FCC is is assumed that data, if populated, other than maidenhead, is best data.
        // pchq.hamqthToCallmaid("((ds NOT LIKE '__T' AND ds NOT LIKE '__N') OR ds IS NULL) AND country != 'US' order by CALLSIGN fetch first 30000 rows ONLY");
        pchq.hamqthToCallmaid("mdate >= '2023-01-20'");
        //hqth.test();
        
         
    }//GEN-LAST:event_jMenuItemTestHTTPGetActionPerformed

    private void jMenuItemWSJTXUDPServerStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemWSJTXUDPServerStartActionPerformed
    //this.swWSJTX = new SwingWorkerWSJTX("WSJTX UDP Server Status",this.logger, Common.debugFlag, null);
    //swWSJTX.wsjtxStatus = new WSJTXStatus(this.swWSJTX, this.logger, Common.debugFlag);
    //swWSJTX.execute();
    this.udptm = new UDPThreadManager("WSJTX UDP Server. Local address=" + Common.localIPAddress, this.logger, Common.debugFlag, null);
    this.udptm.start();
    if(Common.debugFlag)logger.println("Returned from UDPThreadManager.run()");
    }//GEN-LAST:event_jMenuItemWSJTXUDPServerStartActionPerformed

    private void jMenuItemWSJTXUDPServerStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemWSJTXUDPServerStopActionPerformed
    //swWSJTX.cancel(true);
    //swWSJTX.terminate();
    this.udptm.terminate();
    }//GEN-LAST:event_jMenuItemWSJTXUDPServerStopActionPerformed

    private void jMenuItemUDPServerStartCallsignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemUDPServerStartCallsignActionPerformed
    //this.swWSJTX = new SwingWorkerWSJTX("WSJTX UDP Server Status",this.logger, Common.debugFlag, Common.callsign);
    //swWSJTX.wsjtxStatus = new WSJTXStatus(this.swWSJTX, this.logger, Common.debugFlag);
    //swWSJTX.execute();
    this.udptm = new UDPThreadManager("WSJTX UDP Server.  Local address=" + Common.localIPAddress, this.logger, Common.debugFlag, Common.callsign);
    udptm.start();
    }//GEN-LAST:event_jMenuItemUDPServerStartCallsignActionPerformed

    private void jMenuItemPlotParametersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPlotParametersActionPerformed
       new PlotParameters(logger);
    }//GEN-LAST:event_jMenuItemPlotParametersActionPerformed

    private void jMenuItemExportCallsignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemExportCallsignsActionPerformed
      new ExportCallsign();
    }//GEN-LAST:event_jMenuItemExportCallsignsActionPerformed

    private void jMenuItemImportCallsignsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemImportCallsignsActionPerformed
      Common.prodb.importTableFromCSV("CALLMAID");
    }//GEN-LAST:event_jMenuItemImportCallsignsActionPerformed

    private void jMenuItemAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemAboutActionPerformed
        new v.AboutBox().setVisible(true);
    }//GEN-LAST:event_jMenuItemAboutActionPerformed

    private void jMenuItemHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemHelpActionPerformed
        this.mainC.displayHTMLFile("help/QUERYUTIL_HELP.html"); 
    }//GEN-LAST:event_jMenuItemHelpActionPerformed

    private void jMenuItemConfigureTextOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemConfigureTextOutputActionPerformed
        new ConfigureTextOutput();
    }//GEN-LAST:event_jMenuItemConfigureTextOutputActionPerformed


    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UIMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UIMain().setVisible(true);
            }
        });
    }

    
    


    
    
    
private void updateStatus()
  {
  DecimalFormat df = new DecimalFormat("###,###,###");
  this.jTextFieldTotalEntries.setText(df.format(Common.prodb.totalRecordsInTable("ALLTXT")));
  this.jTextFieldTotalCallmaidRecords.setText(df.format(Common.prodb.totalRecordsInTable("CALLMAID")));
  String strDate=Common.prodb.allTxtDateAsString("first");
  if(strDate==null) JOptionPane.showMessageDialog(null, "The Alltxt database table is empty.  This is normal for first program startup.","Alert",JOptionPane.ERROR_MESSAGE);
  if(strDate==null)strDate="None";
  this.jTextFieldDateFirstEntry.setText(strDate);
  this.jFormattedTextFieldStartDate.setText(strDate);
  strDate=Common.prodb.allTxtDateAsString("last");
  if(strDate==null)strDate="None";
  this.jTextFieldDateLastEntry.setText(strDate);
  this.jFormattedTextFieldEndDate.setText(strDate);
  } 
    
    
@Override
protected void finalize() throws Throwable
  {
  //Common.dbAllTxt.commit();
  //Common.dbAllTxt.closeConnection();
  Common.dbAllTxt.DB_finalize();
  this.logger.closeLogfile();
  System.out.println("Closed Database connection in the finalizer"); 
  System.out.println("Closed logfile");
  this.dispose();
  System.exit(0);
  }
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonEditCallsign;
    private javax.swing.JButton jButtonQueryCallLog;
    private javax.swing.JButton jButtonQueryCallsign;
    private javax.swing.JCheckBox jCheckBoxWorked;
    public javax.swing.JComboBox<String> jComboBoxCountry;
    private javax.swing.JComboBox<String> jComboBoxMessageType;
    private javax.swing.JComboBox<String> jComboBoxModDate;
    private javax.swing.JComboBox<String> jComboBoxMode;
    private javax.swing.JComboBox<String> jComboBoxOrAnd;
    public javax.swing.JComboBox<String> jComboBoxState;
    private javax.swing.JFormattedTextField jFormattedTextFieldEndDate;
    private javax.swing.JFormattedTextField jFormattedTextFieldModDate;
    private javax.swing.JFormattedTextField jFormattedTextFieldStartDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabelBearing;
    private javax.swing.JLabel jLabelCQZone;
    private javax.swing.JLabel jLabelCallerCallsign;
    private javax.swing.JLabel jLabelCallsign;
    private javax.swing.JLabel jLabelCallsignQuery;
    private javax.swing.JLabel jLabelChooseOne;
    private javax.swing.JLabel jLabelContest;
    private javax.swing.JLabel jLabelCountry;
    private javax.swing.JLabel jLabelDateFirstEntry;
    private javax.swing.JLabel jLabelDateLastEntry;
    private javax.swing.JLabel jLabelDistance;
    private javax.swing.JLabel jLabelEndDate;
    private javax.swing.JLabel jLabelITUZone;
    private javax.swing.JLabel jLabelMaidenhead;
    private javax.swing.JLabel jLabelMessType;
    private javax.swing.JLabel jLabelMessage;
    private javax.swing.JLabel jLabelModDate;
    private javax.swing.JLabel jLabelMode;
    private javax.swing.JLabel jLabelPlusMiinusBearing;
    private javax.swing.JLabel jLabelPlusMinus;
    private javax.swing.JLabel jLabelRespondentCallsign;
    private javax.swing.JLabel jLabelSourceMaidenhead;
    private javax.swing.JLabel jLabelStartDate;
    private javax.swing.JLabel jLabelState;
    private javax.swing.JLabel jLabelTotalCallmaidRecords;
    private javax.swing.JLabel jLabelTotalEntries;
    private javax.swing.JMenu jMenuAbout;
    private javax.swing.JMenu jMenuAdmin;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuEdit;
    private javax.swing.JMenu jMenuExport;
    private javax.swing.JMenu jMenuFile;
    private javax.swing.JMenuItem jMenuItemAbout;
    private javax.swing.JMenuItem jMenuItemConfigureTextOutput;
    private javax.swing.JMenuItem jMenuItemCountryAbbreviations;
    private javax.swing.JMenuItem jMenuItemEditCallsignprefix;
    private javax.swing.JMenuItem jMenuItemEditCountryabbr;
    private javax.swing.JMenuItem jMenuItemEditCountrygeo;
    private javax.swing.JMenuItem jMenuItemEditIdentifiers;
    private javax.swing.JMenuItem jMenuItemExit;
    private javax.swing.JMenuItem jMenuItemExportCallsigns;
    private javax.swing.JMenuItem jMenuItemExportCountryGeo;
    private javax.swing.JMenuItem jMenuItemExportLog;
    private javax.swing.JMenuItem jMenuItemExportPrefixes;
    private javax.swing.JMenuItem jMenuItemHelp;
    private javax.swing.JMenuItem jMenuItemImportCallsigns;
    private javax.swing.JMenuItem jMenuItemOpenStreetMap;
    private javax.swing.JMenuItem jMenuItemPlotParameters;
    private javax.swing.JMenuItem jMenuItemPopCallmaid;
    private javax.swing.JMenuItem jMenuItemReadAlltxt;
    private javax.swing.JMenuItem jMenuItemReadCallsignfromAlltxt;
    private javax.swing.JMenuItem jMenuItemReadEntityFile;
    private javax.swing.JMenuItem jMenuItemSelectQueryLogColumns;
    private javax.swing.JMenuItem jMenuItemSetProperties;
    private javax.swing.JMenuItem jMenuItemTestHTTPGet;
    private javax.swing.JMenuItem jMenuItemUDPServerStartCallsign;
    private javax.swing.JMenuItem jMenuItemWSJTXUDPServerStart;
    private javax.swing.JMenuItem jMenuItemWSJTXUDPServerStop;
    private javax.swing.JMenuItem jMenuItemZipcode;
    private javax.swing.JMenu jMenuNetwork;
    private javax.swing.JMenu jMenuPropagation;
    private javax.swing.JPanel jPanelCallsignQuery;
    private javax.swing.JPanel jPanelLogQuery;
    private javax.swing.JPanel jPanelStatus;
    private javax.swing.JTextField jTextFieldBearing;
    private javax.swing.JTextField jTextFieldBearingPlusMinus;
    private javax.swing.JTextField jTextFieldCQZone;
    private javax.swing.JTextField jTextFieldCallerCallsign;
    private javax.swing.JTextField jTextFieldCallsign;
    private javax.swing.JTextField jTextFieldContest;
    private javax.swing.JTextField jTextFieldDateFirstEntry;
    private javax.swing.JTextField jTextFieldDateLastEntry;
    private javax.swing.JTextField jTextFieldDistance;
    private javax.swing.JTextField jTextFieldITUZone;
    private javax.swing.JTextField jTextFieldMaidenhead;
    private javax.swing.JTextField jTextFieldMessage;
    private javax.swing.JTextField jTextFieldPlusMinus;
    private javax.swing.JTextField jTextFieldRespondentCallsign;
    private javax.swing.JTextField jTextFieldSourceMaidenhead;
    private javax.swing.JTextField jTextFieldTotalCallmaidRecords;
    private javax.swing.JTextField jTextFieldTotalEntries;
    // End of variables declaration//GEN-END:variables
} // end class UIMain
